// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/auth/database/tokenRepository.go

// Package mock_database is a generated GoMock package.
package mock_database

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	models "github.com/reezanvisram/allergeye/pharmacist/pkg/auth/database/models"
)

// MockTokenRepository is a mock of TokenRepository interface.
type MockTokenRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTokenRepositoryMockRecorder
}

// MockTokenRepositoryMockRecorder is the mock recorder for MockTokenRepository.
type MockTokenRepositoryMockRecorder struct {
	mock *MockTokenRepository
}

// NewMockTokenRepository creates a new mock instance.
func NewMockTokenRepository(ctrl *gomock.Controller) *MockTokenRepository {
	mock := &MockTokenRepository{ctrl: ctrl}
	mock.recorder = &MockTokenRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenRepository) EXPECT() *MockTokenRepositoryMockRecorder {
	return m.recorder
}

// DeleteRefreshToken mocks base method.
func (m *MockTokenRepository) DeleteRefreshToken(refreshToken *models.RefreshToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRefreshToken", refreshToken)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRefreshToken indicates an expected call of DeleteRefreshToken.
func (mr *MockTokenRepositoryMockRecorder) DeleteRefreshToken(refreshToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRefreshToken", reflect.TypeOf((*MockTokenRepository)(nil).DeleteRefreshToken), refreshToken)
}

// GetRefreshTokenById mocks base method.
func (m *MockTokenRepository) GetRefreshTokenById(refreshTokenId string) (*models.RefreshToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRefreshTokenById", refreshTokenId)
	ret0, _ := ret[0].(*models.RefreshToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRefreshTokenById indicates an expected call of GetRefreshTokenById.
func (mr *MockTokenRepositoryMockRecorder) GetRefreshTokenById(refreshTokenId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRefreshTokenById", reflect.TypeOf((*MockTokenRepository)(nil).GetRefreshTokenById), refreshTokenId)
}

// InsertRefreshToken mocks base method.
func (m *MockTokenRepository) InsertRefreshToken(jti string, expiresAt time.Time) (*models.RefreshToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertRefreshToken", jti, expiresAt)
	ret0, _ := ret[0].(*models.RefreshToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertRefreshToken indicates an expected call of InsertRefreshToken.
func (mr *MockTokenRepositoryMockRecorder) InsertRefreshToken(jti, expiresAt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertRefreshToken", reflect.TypeOf((*MockTokenRepository)(nil).InsertRefreshToken), jti, expiresAt)
}
